/**
 * Copyright (C) 2025 Karlo MijaljeviÄ‡
 * <p>
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * <p>
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * <p>
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
package xyz.mijaljevic;

import java.time.LocalDateTime;
import java.util.Objects;

/**
 * Represents a file which is stored in the backup directories as it is stored
 * in the H2 database.
 */
final class BackupFile {
    /**
     * Unique ID generated by the database using the autoincrement feature.
     */
    private Long id;

    /**
     * File name with extension.
     */
    private String name;

    /**
     * MD5 hash of the file.
     */
    private String hash;

    /**
     * Full path of file from the root of the backup directory.
     */
    private String path;

    /**
     * MIME type of the file as deduced by Apache Tika.
     */
    private String type;

    /**
     * Timestamp when the file was first noted/detected.
     */
    private LocalDateTime noted;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getHash() {
        return hash;
    }

    public void setHash(String hash) {
        this.hash = hash;
    }

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public LocalDateTime getNoted() {
        return noted;
    }

    public void setNoted(LocalDateTime noted) {
        this.noted = noted;
    }

    @Override
    public String toString() {
        return "BackupFile{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", hash='" + hash + '\'' +
                ", path='" + path + '\'' +
                ", type='" + type + '\'' +
                ", noted=" + noted +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (o == null || getClass() != o.getClass()) return false;

        BackupFile that = (BackupFile) o;

        return Objects.equals(id, that.id)
                && Objects.equals(name, that.name)
                && Objects.equals(hash, that.hash)
                && Objects.equals(path, that.path)
                && Objects.equals(type, that.type)
                && Objects.equals(noted, that.noted);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, hash, path, type, noted);
    }
}
